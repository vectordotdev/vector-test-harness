#                                    __   __  __
#                                    \ \ / / / /
#                                     \ V / / /
#                                      \_/  \/
#
#                                    V E C T O R
#                                   Configuration
#
# ------------------------------------------------------------------------------
# Website: https://vector.dev
# Docs: https://docs.vector.dev/configuration
# ------------------------------------------------------------------------------
data_dir = "/var/lib/vector"

[sources.in]
type = "syslog"
mode = "tcp"
address = "0.0.0.0:{{ subject_port }}"

##
## company-api
##

[transforms.company_api]
type = "field_filter"
inputs = ["in"]
field = "appname"
value = "company-api"

[transforms.company_api_json]
type = "json_parser"
inputs = ["company_api"]
drop_invalid = true

[transforms.company_api_timestamp]
type = "split"
inputs = ["company_api_json"]
field = "timestamp"
field_names = ["timestamp"]
separator = "."

[transforms.company_api_timestamp.types]
timestamp = "timestamp|%s"

[transforms.company_api_rename]
type = "rename_fields"
inputs = ["company_api_timestamp"]

[transforms.company_api_rename.fields]
timestamp = "time"
host = "hostname"
"metadata.trace_id" = "metadata_trace_id"
"metadata.guild_id" = "metadata_guild_id"
"metadata.channel_id" = "metadata_channel_id"
"metadata.method" = "metadata_method"

[sinks.company_api_http]
type = "http"
inputs = ["company_api_rename"]
uri = "http://{{ consumer_ip }}:{{ consumer_port }}"

[sinks.company_api_http.encoding]
codec = "ndjson"
except_fields = ["metadata.shard[0]", "metadata.shard[1]"]
only_fields = [
    "time",
    "endpoint",
    "hostname",
    "http_cf_ray",
    "http_debug_options",
    "http_content_length",
    "http_method",
    "http_referrer",
    "http_remote_addr",
    "http_response_time",
    "http_route",
    "http_status_code",
    "http_user_agent",
    "http_version",
    "ip_country",
    "ip_metro",
    "user_id",
    "metadata_trace_id",
    "metadata_guild_id",
    "metadata_channel_id",
    "metadata_method",
]
timestamp_format = "unix"

[sinks.company_api_http.request]
in_flight_limit = 100
rate_limit_duration_secs = 5
rate_limit_num = 60

[sinks.company_api_http.buffer]
type = "memory"
max_events = 5000
when_full = "block"

[sinks.company_api_http.batch]
max_size = 5245000
timeout_secs = 5

##
## company-admin
##

[transforms.company_admin]
type = "field_filter"
inputs = ["in"]
field = "appname"
value = "company-admin"

[transforms.company_admin_json]
type = "json_parser"
inputs = ["company_admin"]
drop_invalid = true

[transforms.company_admin_timestamp]
type = "split"
inputs = ["company_admin_json"]
field = "timestamp"
field_names = ["timestamp"]
separator = "."

[transforms.company_admin_timestamp.types]
timestamp = "timestamp|%s"

[transforms.company_admin_rename]
type = "rename_fields"
inputs = ["company_admin_timestamp"]

[transforms.company_admin_rename.fields]
timestamp = "time"
host = "hostname"
"metadata.trace_id" = "metadata_trace_id"
"metadata.method" = "metadata_method"

[sinks.company_admin_http]
type = "http"
inputs = ["company_admin_rename"]
uri = "http://{{ consumer_ip }}:{{ consumer_port }}"

[sinks.company_admin_http.encoding]
codec = "ndjson"
only_fields = [
    "time",
    "endpoint",
    "hostname",
    "http_cf_ray",
    "http_debug_options",
    "http_content_length",
    "http_method",
    "http_referrer",
    "http_remote_addr",
    "http_response_time",
    "http_route",
    "http_status_code",
    "http_user_agent",
    "http_version",
    "user_id",
    "metadata_trace_id",
    "metadata_method",
]
timestamp_format = "unix"

##
## company-media-proxy
##

[transforms.company_media_proxy]
type = "field_filter"
inputs = ["in"]
field = "appname"
value = "company-media-proxy"

[transforms.company_media_proxy_json]
type = "json_parser"
inputs = ["company_media_proxy"]
drop_invalid = true

[transforms.company_media_proxy_timestamp]
type = "split"
inputs = ["company_media_proxy_json"]
field = "ts"
field_names = ["ts"]
separator = "."

[transforms.company_media_proxy_timestamp.types]
ts = "timestamp|%s"

[transforms.company_media_proxy_rename]
type = "rename_fields"
inputs = ["company_media_proxy_timestamp"]

[transforms.company_media_proxy_rename.fields]
ts = "time"
host = "hostname"

[sinks.company_media_proxy_http]
type = "http"
inputs = ["company_media_proxy_rename"]
uri = "http://{{ consumer_ip }}:{{ consumer_port }}"

[sinks.company_media_proxy_http.encoding]
codec = "ndjson"
only_fields = [
    "time",
    "hostname",
    "msg",
    "bhash",
    "bhash_duration",
    "input_type",
    "input_size_bytes",
    "input_height_px",
    "input_width_px",
    "output_type",
    "output_size_bytes",
    "output_height_px",
    "output_width_px",
    "downloaded_in_ms",
    "resized_in_ms",
    "request_type",
    "source",
    "source_host",
    "stacktrace",
]
timestamp_format = "unix"

[sinks.company_media_proxy_http.request]
in_flight_limit = 100
rate_limit_duration_secs = 5
rate_limit_num = 60

[sinks.company_media_proxy_http.buffer]
type = "memory"
max_events = 5000
when_full = "block"

[sinks.company_media_proxy_http.batch]
max_size = 5245000
timeout_secs = 5

##
## company-unfurler
##

[transforms.company_unfurler]
type = "field_filter"
inputs = ["in"]
field = "appname"
value = "company-unfurler"

[transforms.company_unfurler_hostname]
type = "rename_fields"
inputs = ["company_unfurler"]

[transforms.company_unfurler_hostname.fields]
host = "hostname"

[transforms.company_unfurler_json]
type = "json_parser"
inputs = ["company_unfurler_hostname"]
drop_invalid = true

[transforms.company_unfurler_timestamp]
type = "coercer"
inputs = ["company_unfurler_json"]

[transforms.company_unfurler_timestamp.types]
ts = "timestamp"

[transforms.company_unfurler_rename]
type = "rename_fields"
inputs = ["company_unfurler_timestamp"]

[transforms.company_unfurler_rename.fields]
ts = "time"

[transforms.company_unfurler_filter]
type = "field_filter"
inputs = ["company_unfurler_rename"]
field = "msg"
value = "unfurl"

[sinks.company_unfurler_http]
type = "http"
inputs = ["company_unfurler_filter"]
uri = "http://{{ consumer_ip }}:{{ consumer_port }}"

[sinks.company_unfurler_http.encoding]
codec = "ndjson"
only_fields = ["time", "hostname", "host", "url", "msg", "success"]
timestamp_format = "unix"

[sinks.company_unfurler_http.request]
in_flight_limit = 100
rate_limit_duration_secs = 5
rate_limit_num = 60

[sinks.company_unfurler_http.buffer]
type = "memory"
max_events = 5000
when_full = "block"

##
## audit
##

[transforms.audit]
type = "field_filter"
inputs = ["in"]
field = "appname"
value = "audit"

[transforms.audit_timestamp]
type = "coercer"
inputs = ["audit"]

[transforms.audit_timestamp.types]
timestamp = "timestamp"

[transforms.audit_rename]
type = "rename_fields"
inputs = ["audit_timestamp"]

[transforms.audit_rename.fields]
appname = "tag"
host = "hostname"
message = "content"
timestamp = "time"

[sinks.audit_http]
type = "http"
inputs = ["audit_rename"]
uri = "http://{{ consumer_ip }}:{{ consumer_port }}"

[sinks.audit_http.encoding]
codec = "ndjson"
only_fields = ["time", "hostname", "content", "tag", "pid"]
timestamp_format = "unix"

[sinks.audit_http.request]
in_flight_limit = 100
rate_limit_duration_secs = 5
rate_limit_num = 60

[sinks.audit_http.buffer]
type = "memory"
max_events = 5000
when_full = "block"

##
## Debug
##
# [sinks.out]
# inputs = [
#   "audit_rename",
#   "company_api_rename",
#   "company_admin_rename",
#   "company_media_proxy_rename",
#   "company_unfurler_filter"
# ]
# type = "console"
# encoding = "json"
