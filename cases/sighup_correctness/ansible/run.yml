---
- import_playbook: reset.yml

- hosts: '{{ test_namespace }}:&tag_TestRole_consumer'
  become: true
  tasks:
    - include_role:
        name: tcp_test_server
      vars:
        action: start_and_wait
        port: "{{ consumer_port }}"

- hosts: '{{ test_namespace }}:&tag_TestRole_subject'
  become: true
  tasks:
    - set_fact:
        consumer_ip: "{{ hostvars[groups['tag_Name_vector_test_' + user_id + '_' + test_name + '_' + test_configuration + '_consumer'].0].private_ip_address }}"

    - name: "Reset the config to it's original state"
      include: "configure/{{ test_subject }}.yml"

    - set_fact:
        consumer_ip: "{{ hostvars[groups['tag_Name_vector_test_' + user_id + '_' + test_name + '_' + test_configuration + '_consumer'].1].private_ip_address }}"

    - include_role:
        name: "{{ test_subject }}"
      vars:
        action: start

    - name: Wait for port {{ subject_port }} to become available
      wait_for:
        port: "{{ subject_port }}"
        delay: 1

    - name: Send first line
      shell: |
        echo "{\"log\": \"First line\"}" | socat -u - tcp:127.0.0.1:{{ subject_port }}

    - name: "Update config to point to the new consumer"
      include: "configure/{{ test_subject }}.yml"

    - include_role:
        name: "{{ test_subject }}"
      vars:
        action: reload

    - name: Send second line
      shell: |
        echo "{\"log\": \"Second line\"}" | socat -u - tcp:127.0.0.1:{{ subject_port }}

    - include_role:
        name: "{{ test_subject }}"
      vars:
        action: stop

- hosts: '{{ test_namespace }}:&tag_TestRole_consumer'
  become: true
  tasks:
    - include_role:
        name: tcp_test_server
      vars:
        action: stop
